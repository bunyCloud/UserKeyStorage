{
  "address": "0xA29aE5Ba7307da6FA53aC8C239EfE1159D4902A3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "encryptedKey",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_encryptedKey",
          "type": "string"
        }
      ],
      "name": "addWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getEncryptedKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "encryptedKey",
              "type": "string"
            }
          ],
          "internalType": "struct UserKeyStorage.UserKeyInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userKeys",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "encryptedKey",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xebc76e12bc8cca545f05e1bd01d7ec507f29b7180a9645dbfac99cca0c0707f5",
  "receipt": {
    "to": null,
    "from": "0x8406A51A0E1B5F52Ff61226773e6328e5Da5d964",
    "contractAddress": "0xA29aE5Ba7307da6FA53aC8C239EfE1159D4902A3",
    "transactionIndex": 0,
    "gasUsed": "917042",
    "logsBloom": "0x
    "blockHash": "0x34b81357f2219ba471609450f338c6119615cc808dc04b2b06b8a7e3d04755bf",
    "transactionHash": "0xebc76e12bc8cca545f05e1bd01d7ec507f29b7180a9645dbfac99cca0c0707f5",
    "logs": [],
    "blockNumber": 253441219,
    "cumulativeGasUsed": "917042",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d27f8a0ee8192f30bb0799492018325f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"encryptedKey\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_encryptedKey\",\"type\":\"string\"}],\"name\":\"addWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getEncryptedKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedKey\",\"type\":\"string\"}],\"internalType\":\"struct UserKeyStorage.UserKeyInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userKeys\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedKey\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserKeyStorage.sol\":\"UserKeyStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/UserKeyStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract UserKeyStorage {\\r\\n    \\r\\n    struct UserKeyInfo {\\r\\n        address userAddress;\\r\\n        string username; // Corrected the typo \\\"usernname\\\" to \\\"username\\\"\\r\\n        string encryptedKey;\\r\\n    }\\r\\n    \\r\\n    UserKeyInfo[] public userKeys;\\r\\n    mapping(address => string) public userToKey;\\r\\n    event UserAdded(address indexed userAddress, string username, string encryptedKey);\\r\\n    \\r\\n    function addWallet(address _userAddress, string memory _username, string memory _encryptedKey) public {\\r\\n        require(bytes(userToKey[_userAddress]).length == 0, \\\"User already exists\\\");\\r\\n        userKeys.push(UserKeyInfo(_userAddress, _username, _encryptedKey));\\r\\n        userToKey[_userAddress] = _encryptedKey;\\r\\n        emit UserAdded(_userAddress, _username, _encryptedKey); \\r\\n    }\\r\\n\\r\\n    function getUserInfo(address _userAddress) public view returns (UserKeyInfo memory) {\\r\\n        for (uint256 i = 0; i < userKeys.length; i++) {\\r\\n            if (userKeys[i].userAddress == _userAddress) {\\r\\n                return userKeys[i];\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"User not found\\\");\\r\\n    }\\r\\n\\r\\n    function getEncryptedKey(address _userAddress) public view returns (string memory) {\\r\\n        return userToKey[_userAddress];\\r\\n    }\\r\\n    \\r\\n    function getTotalUsers() public view returns (uint256) {\\r\\n        return userKeys.length;\\r\\n    }\\r\\n\\r\\n    function getAllUsers() public view returns (address[] memory, string[] memory, string[] memory) {\\r\\n        address[] memory addresses = new address[](userKeys.length);\\r\\n        string[] memory usernames = new string[](userKeys.length);\\r\\n        string[] memory encryptedKeys = new string[](userKeys.length);\\r\\n\\r\\n        for (uint256 i = 0; i < userKeys.length; i++) {\\r\\n            addresses[i] = userKeys[i].userAddress;\\r\\n            usernames[i] = userKeys[i].username;\\r\\n            encryptedKeys[i] = userKeys[i].encryptedKey;\\r\\n        }\\r\\n\\r\\n        return (addresses, usernames, encryptedKeys);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x4558663183ca9a4e5e856f901e7b357a5c0a94842289ffc39835ac1c9fd07f91\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061006d5760003560e01c806308eedccd146100725780634b74a1f11461009d5780636386c1c7146100bd5780637e1555f9146100dd5780639be572f6146100f2578063e2842d7914610103578063f8dbeb0f1461011a575b600080fd5b610085610080366004610aa5565b61012d565b60405161009493929190610b04565b60405180910390f35b6100b06100ab366004610b60565b61027d565b6040516100949190610b82565b6100d06100cb366004610b60565b610329565b6040516100949190610b95565b6100f06100eb366004610c8c565b61055f565b005b600054604051908152602001610094565b61010b6106ee565b60405161009493929190610d55565b6100b0610128366004610b60565b610a0b565b6000818154811061013d57600080fd5b6000918252602090912060039091020180546001820180546001600160a01b0390921693509061016c90610dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461019890610dc0565b80156101e55780601f106101ba576101008083540402835291602001916101e5565b820191906000526020600020905b8154815290600101906020018083116101c857829003601f168201915b5050505050908060020180546101fa90610dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461022690610dc0565b80156102735780601f1061024857610100808354040283529160200191610273565b820191906000526020600020905b81548152906001019060200180831161025657829003601f168201915b5050505050905083565b6001600160a01b03811660009081526001602052604090208054606091906102a490610dc0565b80601f01602080910402602001604051908101604052809291908181526020018280546102d090610dc0565b801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b50505050509050919050565b610356604051806060016040528060006001600160a01b0316815260200160608152602001606081525090565b60005b60005481101561052057826001600160a01b03166000828154811061038057610380610dfa565b60009182526020909120600390910201546001600160a01b03160361050e57600081815481106103b2576103b2610dfa565b6000918252602091829020604080516060810190915260039092020180546001600160a01b0316825260018101805492939192918401916103f290610dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461041e90610dc0565b801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050815260200160028201805461048490610dc0565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090610dc0565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b505050505081525050915050919050565b8061051881610e10565b915050610359565b5060405162461bcd60e51b815260206004820152600e60248201526d155cd95c881b9bdd08199bdd5b9960921b60448201526064015b60405180910390fd5b6001600160a01b0383166000908152600160205260409020805461058290610dc0565b1590506105c75760405162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b6044820152606401610556565b604080516060810182526001600160a01b038581168252602082018581529282018490526000805460018101825590805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600390920291820180546001600160a01b031916919093161782559251919290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5649091019061066b9082610e86565b50604082015160028201906106809082610e86565b5050506001600160a01b03831660009081526001602052604090206106a58282610e86565b50826001600160a01b03167f8eab1db142a914aff8b515eedb9177bd7effaef6d714c41e30bdf1520677860783836040516106e1929190610f46565b60405180910390a2505050565b60608060606000808054905067ffffffffffffffff81111561071257610712610be9565b60405190808252806020026020018201604052801561073b578160200160208202803683370190505b50600080549192509067ffffffffffffffff81111561075c5761075c610be9565b60405190808252806020026020018201604052801561078f57816020015b606081526020019060019003908161077a5790505b50600080549192509067ffffffffffffffff8111156107b0576107b0610be9565b6040519080825280602002602001820160405280156107e357816020015b60608152602001906001900390816107ce5790505b50905060005b6000548110156109fe576000818154811061080657610806610dfa565b600091825260209091206003909102015484516001600160a01b039091169085908390811061083757610837610dfa565b60200260200101906001600160a01b031690816001600160a01b0316815250506000818154811061086a5761086a610dfa565b9060005260206000209060030201600101805461088690610dc0565b80601f01602080910402602001604051908101604052809291908181526020018280546108b290610dc0565b80156108ff5780601f106108d4576101008083540402835291602001916108ff565b820191906000526020600020905b8154815290600101906020018083116108e257829003601f168201915b505050505083828151811061091657610916610dfa565b60200260200101819052506000818154811061093457610934610dfa565b9060005260206000209060030201600201805461095090610dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461097c90610dc0565b80156109c95780601f1061099e576101008083540402835291602001916109c9565b820191906000526020600020905b8154815290600101906020018083116109ac57829003601f168201915b50505050508282815181106109e0576109e0610dfa565b602002602001018190525080806109f690610e10565b9150506107e9565b5091959094509092509050565b60016020526000908152604090208054610a2490610dc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5090610dc0565b8015610a9d5780601f10610a7257610100808354040283529160200191610a9d565b820191906000526020600020905b815481529060010190602001808311610a8057829003601f168201915b505050505081565b600060208284031215610ab757600080fd5b5035919050565b6000815180845260005b81811015610ae457602081850181015186830182015201610ac8565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0384168152606060208201819052600090610b2890830185610abe565b8281036040840152610b3a8185610abe565b9695505050505050565b80356001600160a01b0381168114610b5b57600080fd5b919050565b600060208284031215610b7257600080fd5b610b7b82610b44565b9392505050565b602081526000610b7b6020830184610abe565b602080825282516001600160a01b03168282015282015160606040830152600090610bc36080840182610abe565b90506040840151601f19848303016060850152610be08282610abe565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c1057600080fd5b813567ffffffffffffffff80821115610c2b57610c2b610be9565b604051601f8301601f19908116603f01168101908282118183101715610c5357610c53610be9565b81604052838152866020858801011115610c6c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610ca157600080fd5b610caa84610b44565b9250602084013567ffffffffffffffff80821115610cc757600080fd5b610cd387838801610bff565b93506040860135915080821115610ce957600080fd5b50610cf686828701610bff565b9150509250925092565b600081518084526020808501808196508360051b8101915082860160005b85811015610d48578284038952610d36848351610abe565b98850198935090840190600101610d1e565b5091979650505050505050565b606080825284519082018190526000906020906080840190828801845b82811015610d975781516001600160a01b031684529284019290840190600101610d72565b50505083810382850152610dab8187610d00565b9150508281036040840152610b3a8185610d00565b600181811c90821680610dd457607f821691505b602082108103610df457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610e3057634e487b7160e01b600052601160045260246000fd5b5060010190565b601f821115610e8157600081815260208120601f850160051c81016020861015610e5e5750805b601f850160051c820191505b81811015610e7d57828155600101610e6a565b5050505b505050565b815167ffffffffffffffff811115610ea057610ea0610be9565b610eb481610eae8454610dc0565b84610e37565b602080601f831160018114610ee95760008415610ed15750858301515b600019600386901b1c1916600185901b178555610e7d565b600085815260208120601f198616915b82811015610f1857888601518255948401946001909101908401610ef9565b5085821015610f365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000610f596040830185610abe565b8281036020840152610be08185610abe56fea2646970667358221220ce8ca42ca4c0f040aedc0b84c4106228e0dfe90da6e48a0092fdd8d7392c56f064736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "userKeys",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(UserKeyInfo)8_storage)dyn_storage"
      },
      {
        "astId": 16,
        "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
        "label": "userToKey",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(UserKeyInfo)8_storage)dyn_storage": {
        "base": "t_struct(UserKeyInfo)8_storage",
        "encoding": "dynamic_array",
        "label": "struct UserKeyStorage.UserKeyInfo[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(UserKeyInfo)8_storage": {
        "encoding": "inplace",
        "label": "struct UserKeyStorage.UserKeyInfo",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
            "label": "username",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/UserKeyStorage.sol:UserKeyStorage",
            "label": "encryptedKey",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}